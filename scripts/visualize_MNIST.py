import numpy as np
from PIL import Image

def visualize_MNIST(inp):
    '''
    inp: A string of 1568 hex digits, i.e. 784 bytes taken from 1 line of train_input.dat in dnn-rtl/data/
    Displays the NEGATIVE associated image (since PIL treats 0 as black and 255 as white - opposite of MNIST )
    '''
    im = np.zeros((28,28), dtype='uint8')
    count = 0
    for i in xrange(0,len(inp),2):
        hexb = inp[i:i+2]
        im[count/28,count%28] = int(hexb,16)
        count += 1
    ims = Image.fromarray(im)
    ims.show()

visualize_MNIST(inp = '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000339ffd9f320000000000000000000000000000000000000000000030eefcfcfced00000000000000000000000000000000000000000036e3fdfcefe9fc390600000000000000000000000000000000000a3ce0fcfdfcca54fcfd7a0000000000000000000000000000000000a3fcfcfcfdfcfc60bdfda70000000000000000000000000000000033eefdfdbe72fde42f4fffa800000000000000000000000000000030eefcfcb30c4b79150000fdf3320000000000000000000000000026a5fde9d054000000000000fdfca500000000000000000000000007b2fcf047131c000000000000fdfcc300000000000000000000000039fcfc3f000000000000000000fdfcc3000000000000000000000000c6fdbe00000000000000000000fffdc400000000000000000000004cf6fc7000000000000000000000fdfc94000000000000000000000055fce61900000000000000000787fdba0c000000000000000000000055fcdf00000000000000000783fce14700000000000000000000000055fc910000000000000030a5fcad000000000000000000000000000056fde100000000000072eefda200000000000000000000000000000055fcf992301d55b2e1fddfa73800000000000000000000000000000055fcfcfce5d7fcfcfcc48200000000000000000000000000000000001cc7fcfcfdfcfce99100000000000000000000000000000000000000001980fcfdfc8d25000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')
